import React, { useEffect, useState } from 'react';
import { Pie } from 'react-chartjs-2';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  ArcElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';

// Register the necessary scales and components
ChartJS.register(
  CategoryScale,
  LinearScale,
  ArcElement,
  Title,
  Tooltip,
  Legend
);

const AlertsBySourceIP = () => {
  const [chartData, setChartData] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetch('/eve.json')
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        console.log("Fetched data:", data); // Debugging log

        if (!Array.isArray(data)) {
          throw new Error('Fetched data is not an array');
        }

        const ipCounts = data.reduce((acc, row) => {
          if (row && row.src_ip) {
            acc[row.src_ip] = (acc[row.src_ip] || 0) + 1;
          }
          return acc;
        }, {});

        const ips = Object.keys(ipCounts);
        const alerts = Object.values(ipCounts);

        setChartData({
          labels: ips,
          datasets: [
            {
              label: 'Number of Alerts',
              data: alerts,
              backgroundColor: ips.map((_, idx) =>
                `rgba(${75 + (idx * 10) % 180}, ${(192 + idx * 20) % 255}, ${(192 + idx * 30) % 255}, 0.6)`
              ),
            },
          ],
        });
      })
      .catch(error => {
        console.error('Error fetching data:', error);
        setError(error.message);
      });
  }, []);

  return (
    <div style={styles.container}>
      <h2 style={styles.title}>Alerts by Source IP</h2>
      {error ? (
        <p style={styles.error}>Error: {error}</p>
      ) : chartData ? (
        <>
          <Pie data={chartData} />
          <p style={styles.text}>
            This pie chart displays the number of alerts generated by each source IP. 
            Monitoring the distribution of alerts by source IP can help identify 
            which IPs are the most active in generating alerts, indicating potential threats 
            or misconfigurations in the network.
          </p>
          
        </>
      ) : (
        <p style={styles.loading}>Loading chart...</p>
      )}
    </div>
  );
};

const styles = {
  container: {
    padding: '20px',
    backgroundColor: '#2c2c2c',
    borderRadius: '8px',
    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',
    color: '#ffffff',
    maxWidth: '800px',
    margin: '0 auto',
  },
  title: {
    marginBottom: '20px',
    textAlign: 'center',
    fontSize: '28px',
    color: '#ffffff',
  },
  text: {
    margin: '20px 0',
    fontSize: '16px',
    lineHeight: '1.5',
    color: '#dddddd',
  },
  link: {
    display: 'inline-block',
    marginTop: '20px',
    padding: '10px 20px',
    backgroundColor: '#007bff',
    color: '#ffffff',
    borderRadius: '5px',
    textDecoration: 'none',
    transition: 'background-color 0.3s ease',
  },
  loading: {
    textAlign: 'center',
    fontSize: '18px',
    color: '#ffffff',
  },
  error: {
    textAlign: 'center',
    fontSize: '18px',
    color: 'red',
  },
};

export default AlertsBySourceIP;
